<Application x:Class="PomodoroTrayApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:PomodoroTrayApp"
             xmlns:tb="http://www.hardcodet.net/taskbar"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:PomodoroTrayApp.Converters">

    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <materialDesign:BundledTheme BaseTheme="Dark" PrimaryColor="DeepPurple" SecondaryColor="DeepOrange" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesign2.Defaults.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>

            <tb:TaskbarIcon x:Key="TrayIcon" IconSource="Assets/timer-icon.png" ToolTipText="{Binding CurrentDuration, StringFormat='Time Remaining: {0:mm\\:ss}'}">
                <tb:TaskbarIcon.ContextMenu>
                    <ContextMenu Style="{StaticResource MaterialDesignContextMenu}" ItemContainerStyle="{StaticResource MaterialDesignMenuItem}">
                        <MenuItem Header="Start" Command="{Binding StartCommand}" Visibility="{Binding IsRunning, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="Play" />
                            </MenuItem.Icon>
                        </MenuItem>

                        <MenuItem Header="Stop" Command="{Binding StopCommand}" Visibility="{Binding IsRunning, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="Stop" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator Style="{StaticResource MaterialDesignSeparator}"/>

                        <MenuItem Header="Set Interval" >
                            <MenuItem Header="15 min" Command="{Binding SetIntervalCommand}" CommandParameter="00:15:00" />
                            <MenuItem Header="30 min" Command="{Binding SetIntervalCommand}" CommandParameter="00:30:00" />
                            <MenuItem Header="60 min" Command="{Binding SetIntervalCommand}" CommandParameter="00:60:00" />
                        </MenuItem>

                        <MenuItem Header="Show Window" Command="{Binding ShowWindowCommand}" >
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="Launch" />
                            </MenuItem.Icon>
                        </MenuItem>

                        <MenuItem Header="Exit App" Command="{Binding ExitCommand}" >
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="ExitToApp" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </tb:TaskbarIcon.ContextMenu>
            </tb:TaskbarIcon>
        </ResourceDictionary>
    </Application.Resources>

</Application>
