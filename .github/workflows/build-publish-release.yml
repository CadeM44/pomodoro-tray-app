name: Build, Publish, & Create Release

on:
  push:
    branches:
      - main

permissions:
  contents: write # Allow creating releases and uploading asset

jobs:
  publish:
    runs-on: windows-latest # Use Windows runner for WPF projects
    strategy:
      matrix:
        dotnet-version: [8.0.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      # Cache NuGet packages (optional but speeds up builds)
      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: dotnet restore
        run: dotnet restore ./PomodoroTrayApp.sln

      - name: Generate Date Version
        id: date_versioning
        shell: pwsh
        run: |
          $datePart = Get-Date -Format "yyyy.MM.dd"
          # GITHUB_RUN_ATTEMPT is 1 for the first attempt of a workflow run, and increments on re-runs.
          $runAttempt = $env:GITHUB_RUN_ATTEMPT

          # Fallback if GITHUB_RUN_ATTEMPT is not available (e.g., some local test environments)
          if (-not $runAttempt) {
            Write-Warning "GITHUB_RUN_ATTEMPT environment variable not found, using '1' as fallback for run attempt."
            $runAttempt = "1"
          }

          $versionCore = "$datePart.$runAttempt"  # e.g., 2025.05.09.1
          $versionTag = "v$versionCore"          # e.g., v2025.05.09.1

          Write-Host "Generated version (core): $versionCore"
          Write-Host "Generated version (tag): $versionTag"

          echo "version_core=$versionCore" >> $env:GITHUB_OUTPUT
          echo "version_tag=$versionTag"   >> $env:GITHUB_OUTPUT


      - name: dotnet publish (Release)
        shell: pwsh # Use PowerShell for multi-line run command on Windows
        run: |
          dotnet publish PomodoroTrayApp.csproj `
            -c Release `
            -r win-x64 `
            --self-contained true `
            -p:PublishSingleFile=true `
            -p:IncludeNativeLibrariesForSelfExtract=true `
            -p:DebugType=None `
            -p:Version=${{ steps.date_versioning.outputs.version_core }} `
            -o publish

      # Create GitHub Release and Upload Assets
      # This step runs only if the previous steps were successful.
      - name: Create Release and Upload Artifacts
        uses: softprops/action-gh-release@v2
        with:
          tag_name: release-${{ steps.date_versioning.outputs.version_tag }}
          name: Release ${{ steps.date_versioning.outputs.version_tag }}
          prerelease: false
          draft: false
          files: ./publish/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
