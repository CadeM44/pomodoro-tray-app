name: Build, Publish, & Create Release

on:
  push:
    branches:
      - main

permissions:
  contents: write # Allow creating releases and uploading asset
  
jobs:
  publish:
    runs-on: windows-latest # Use Windows runner for WPF projects
    strategy:
      matrix:
        dotnet-version: [8.0.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      # Cache NuGet packages (optional but speeds up builds)
      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: dotnet restore
        run: dotnet restore ./PomodoroTrayApp.sln

      # Run tests (if any)
      # - name: dotnet test
      #   run: dotnet test ./YourSolution.sln --no-restore --verbosity normal

      - name: dotnet publish (Release)
        run: dotnet publish PomodoroTrayApp.csproj -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -p:DebugType=None -o publish

      # Create GitHub Release and Upload Assets
      # This step runs only if the previous steps were successful.
      - name: Create Release and Upload Artifacts
        uses: softprops/action-gh-release@v2
        with:
          # Define the tag name for the release. Using run_id for uniqueness.
          tag_name: release-${{ github.run_id }}
          # Define the name of the release visible on GitHub.
          name: Release ${{ github.run_id }}
          prerelease: false
          draft: false
          files: ./publish/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
